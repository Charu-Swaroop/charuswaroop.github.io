{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/acquisition-table/acquisition-table.component.css","webpack:///./src/app/acquisition-table/acquisition-table.component.html","webpack:///./src/app/acquisition-table/acquisition-table.component.ts","webpack:///./src/app/add-target/add-target.component.css","webpack:///./src/app/add-target/add-target.component.html","webpack:///./src/app/add-target/add-target.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data-model/data.model.ts","webpack:///./src/app/data-model/performance.enum.ts","webpack:///./src/app/data-model/status.enum.ts","webpack:///./src/app/services/acquisition-manager.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container{\\r\\n    width: 100%;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n.btn{\\r\\n    margin-top:20px !important;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <ag-grid-angular \\n  style=\\\"width: 100%; height: 200px;\\\" \\n  class=\\\"ag-theme-fresh\\\"\\n  [rowData]=\\\"rowData\\\" \\n  [columnDefs]=\\\"columnDefs\\\"\\n   [gridOptions]=\\\"gridOptions\\\" \\n   [defaultColDef]=\\\"defaultColDef\\\"\\n   [enableSorting]=\\\"true\\\"\\n   [enableFilter]=\\\"true\\\"\\n   [animateRows]=\\\"true\\\"\\n\\n  >\\n  </ag-grid-angular>\\n  <div>\\n    <button   class=\\\"btn\\\" (click)=\\\"onRemoveSelected()\\\">Remove Selected</button>\\n   \\n</div>\\n<div style=\\\"margin-top: 20px;\\\">\\n<app-add-target [targetGridOptions]=\\\"gridOptions\\\"></app-add-target>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {GridOptions} from \"ag-grid\";\nimport { AcquisitionManagerService } from '../services/acquisition-manager.service';\nimport { DataModel } from '../data-model/data.model';\n\n @Component({\n  selector: 'app-acquisition-table',\n  templateUrl: './acquisition-table.component.html',\n  styleUrls: ['./acquisition-table.component.css']\n}) \n\n\nexport class AcquisitionTableComponent implements OnInit {\n  public gridOptions: GridOptions;\n\n  public columnDefs: any[];\n  public rowData: any[];\n  public defaultColDef;\n  constructor( public acquisitionManagerService: AcquisitionManagerService) {\n    this.columnDefs = [\n      {headerName: 'Status', field: 'Status' ,width:100, editable: true,  cellEditor: \"select\",\n      cellEditorParams: {\n        values: [\n          \"Open\",\n          \"Pending\",\n          \"Approved\",\n          \"Declined\",\n          \n        ]\n      }},\n      {headerName: 'Company Info', field: 'CompanyInfo',width:200 },\n      {headerName: 'Key Contacts', field: 'KeyContacts'},\n      {headerName: 'Financial Performance', field: 'Performance',cellEditor: \"select\",\n      cellEditorParams: {\n        values: [\n          \"Average\",\n          \"Good\",\n          \"Achieving\",\n          \"Outstanding\"\n         \n        ]},\n      \n      \n      }];\n  this.defaultColDef = { editable: true };\n  this.rowData = [\n      { Status: 'Open', CompanyInfo: 'Tulip Corportions', KeyContacts: 'Mr.Saxena' ,Performance:'Achieving'},\n      { Status: 'Pending', CompanyInfo: 'Arnayka Ltd.', KeyContacts: 'Miss Kasyap' ,Performance:'Good'},\n      { Status: 'Open', CompanyInfo: 'ABYSS Systems', KeyContacts: 'Miss Gilbert' ,Performance:'Achieving'},\n      { Status: 'Approved', CompanyInfo: 'Epitome Private Ltd.', KeyContacts: 'Mr. Rai' ,Performance:'Outstanding'},\n \n  ];\n    this.gridOptions = {\n      columnDefs: this.columnDefs,\n      rowSelection: 'single',\n      onGridReady: function (params) {\n        params.api.sizeColumnsToFit();\n        params.api.selectNode(params.api.getRowNode('0'));\n      }\n    }\n    \n  }\n   \n  onRemoveSelected() {\n    var selectedData = this.gridOptions.api.getSelectedRows();\n    var res = this.gridOptions.api.updateRowData({ remove: selectedData });\n \n  }\n\n  public addTarget() {\n    this.gridOptions.api.deselectAll();\n    this.acquisitionManagerService.selectedTarget = new DataModel(-1, '', '', '', '');\n  }\n  ngOnInit() {\n    \n  }\n  \n\n}\n ","module.exports = \"\"","module.exports = \"<div class=\\\"div-target-form\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12 page-title\\\">\\n        <h3 [hidden]=\\\"this.acquisitionManagerService.selectedTarget.id === -1\\\">Update Target</h3>\\n        <h3 [hidden]=\\\"this.acquisitionManagerService.selectedTarget.id !== -1\\\">Add Target</h3>\\n      </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <label for=\\\"company-name\\\">Company Name:</label>\\n      <input class=\\\"form-control\\\"  [(ngModel)]=\\\"acquisitionManagerService.selectedTarget.CompanyInfo\\\" type=\\\"text\\\" id=\\\"company-name\\\" />\\n      \\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n        <label for=\\\"select-status\\\">Current Status:</label>\\n        <select id=\\\"select-status\\\" [(ngModel)]=\\\"acquisitionManagerService.selectedTarget.Status\\\" class=\\\"form-control\\\">\\n          <option *ngFor=\\\"let status of optionsStatus\\\" \\n          [value]=\\\"status.id\\\">{{status.name}}</option>\\n        </select>\\n      </div>\\n    \\n  </div>\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <label for=\\\"company-name\\\">Key Contact:</label>\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"acquisitionManagerService.selectedTarget.KeyContacts\\\" type=\\\"text\\\" id=\\\"company-name\\\" />\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n          <label for=\\\"select-performance\\\">Financial Performance:</label>\\n          <select id=\\\"select-performance\\\" [(ngModel)]=\\\"acquisitionManagerService.selectedTarget.Performance\\\" class=\\\"form-control\\\">\\n              <option *ngFor=\\\"let performance of optionsPerformance\\\" \\n              [value]=\\\"performance.id\\\">{{performance.name}}</option>\\n            </select>\\n        </div>\\n      \\n    </div>\\n    <div class=\\\"row div-save-btn\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button class=\\\"btn\\\" (click)=\\\"saveUpdateTarget();\\\" >Save</button>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit,Input } from '@angular/core';\nimport { GridOptions } from 'ag-grid';\nimport { AcquisitionManagerService } from '../services/acquisition-manager.service';\n\nimport { Status } from '../data-model/status.enum';\nimport { Performance } from '../data-model/performance.enum';\nimport { DataModel } from '../data-model/data.model';\n\n\n@Component({\n  selector: 'app-add-target',\n  templateUrl: './add-target.component.html',\n  styleUrls: ['./add-target.component.css']\n})\nexport class AddTargetComponent implements OnInit {\n  @Input() targetGridOptions: GridOptions;\n  public optionsStatus = [];\n  public optionsPerformance = [];\n\n  constructor(public acquisitionManagerService: AcquisitionManagerService\n    ) {\n    \n    this.optionsStatus = this.acquisitionManagerService.bindStatusList();\n    this.optionsPerformance = this.acquisitionManagerService.bindPerformanceList();\n\n  }\n\n  ngOnInit() {\n  }\n\n  public saveUpdateTarget() {\n    if (this.acquisitionManagerService.selectedTarget.CompanyInfo === '' ||\n      this.acquisitionManagerService.selectedTarget.KeyContacts === '' ||\n      this.acquisitionManagerService.selectedTarget.Status === '' ||\n      this.acquisitionManagerService.selectedTarget.Performance === '') {\n      \n      return false;\n    }\n    if (!this.acquisitionManagerService.selectedTarget || this.acquisitionManagerService.selectedTarget.id === -1) {\n      let newTarget = new DataModel((this.targetGridOptions.api.getDisplayedRowCount() + 1), Status[this.acquisitionManagerService.selectedTarget.Status], this.acquisitionManagerService.selectedTarget.CompanyInfo, this.acquisitionManagerService.selectedTarget.KeyContacts, Performance[this.acquisitionManagerService.selectedTarget.Performance]);\n      this.targetGridOptions.api.insertItemsAtIndex(this.targetGridOptions.api.getDisplayedRowCount(), [newTarget]);\n      \n    } else {\n      var rowNode = this.targetGridOptions.api.getRowNode((this.acquisitionManagerService.selectedTarget.id - 1).toString());\n      if (!rowNode) {\n        rowNode = this.targetGridOptions.api.getDisplayedRowAtIndex(this.acquisitionManagerService.selectedTarget.id - 1);\n      }\n      rowNode.setDataValue(\"Status\", Status[this.acquisitionManagerService.selectedTarget.Status]);\n      rowNode.setDataValue(\"CompanyInfo\", this.acquisitionManagerService.selectedTarget.CompanyInfo);\n      rowNode.setDataValue(\"KeyContacts\", this.acquisitionManagerService.selectedTarget.KeyContacts);\n      rowNode.setDataValue(\"Performance\", Performance[this.acquisitionManagerService.selectedTarget.Performance]);\n     // this.toastr.success('Target Updated Sucessfully!', 'Success!', { 'positionClass': 'toast-bottom-right' });\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container\\\">\\r\\n    <h1 class=\\\"page-title\\\">\\r\\n      Welcome to {{title}}!\\r\\n    </h1>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <app-acquisition-table></app-acquisition-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AcquisitionTableComponent } from './acquisition-table/acquisition-table.component';\n\nimport {AgGridModule} from \"ag-grid-angular/main\";\n\nimport { AddTargetComponent } from './add-target/add-target.component';\nimport { AcquisitionManagerService } from './services/acquisition-manager.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AcquisitionTableComponent,\n    \n    AddTargetComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AgGridModule.withComponents([])\n  ],\n  providers: [AcquisitionManagerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class DataModel {\r\n    id: number;\r\n    Status: string;\r\n    CompanyInfo: string;\r\n    KeyContacts: string;\r\n    Performance: string;\r\n    constructor(id: number, status: string, companyInfo: string, keyContacts: string, performance: string) {\r\n        this.id = id;\r\n        this.Status = status;\r\n        this.CompanyInfo = companyInfo;\r\n        this.KeyContacts = keyContacts;\r\n        this.Performance = performance;\r\n    }\r\n}\r\n","export enum Performance {\r\n   Average,\r\n    Good,\r\n    Achieving,\r\n    Outstanding\r\n}\r\n","export enum Status {\r\n    Researching,\r\n    Pending,\r\n    Approval,\r\n    Approved,\r\n    Declined\r\n}\r\n","import { DataModel } from './../data-model/data.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Performance } from '../data-model/performance.enum';\r\nimport { Status } from '../data-model/status.enum';\r\n\r\n@Injectable()\r\nexport class AcquisitionManagerService {\r\n  public targets: DataModel[] = [];\r\n  public selectedTarget: DataModel = new DataModel(-1, '', '', '', '');\r\n\r\n \r\n\r\n  public addNewTargets(newTarget: DataModel) {\r\n    this.targets.push(newTarget);\r\n  }\r\n\r\n  public bindStatusList() {\r\n    const optionsStatus = [];\r\n    optionsStatus.push({ id: Status.Approval, name: Status[Status.Approval] });\r\n    optionsStatus.push({ id: Status.Approved, name: Status[Status.Approved] });\r\n    optionsStatus.push({ id: Status.Declined, name: Status[Status.Declined] });\r\n    optionsStatus.push({ id: Status.Pending, name: Status[Status.Pending] });\r\n    optionsStatus.push({ id: Status.Researching, name: Status[Status.Researching] });\r\n    return optionsStatus;\r\n  }\r\n\r\n  public bindPerformanceList() {\r\n    const optionsPerformance = [];\r\n    optionsPerformance.push({ id: Performance.Average, name: Performance[Performance.Average] });\r\n    optionsPerformance.push({ id: Performance.Good, name: Performance[Performance.Good] });\r\n    optionsPerformance.push({ id: Performance.Achieving, name: Performance[Performance.Achieving] });\r\n    optionsPerformance.push({ id: Performance.Outstanding, name: Performance[Performance.Outstanding] });\r\n    return optionsPerformance;\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}